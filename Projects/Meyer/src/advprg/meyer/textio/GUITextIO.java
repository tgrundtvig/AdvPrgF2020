/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advprg.meyer.textio;

import advprg.meyer.sync.SyncBox;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author kasper
 */
public class GUITextIO extends javax.swing.JFrame implements ITextIO
{

    static {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(GUITextIO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            Logger.getLogger(GUITextIO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            Logger.getLogger(GUITextIO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(GUITextIO.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    private static final SyncBox<GUITextIO> guiBox = new SyncBox<>();
    private final SyncBox<String> box;

    /**
     * Creates new form MoriaMinesUI
     */
    private GUITextIO()
    {
        this.box = new SyncBox<>();
        initComponents();
        //outField.setFont(new Font("Monospace", Font.PLAIN, 24));
        outField.setText("");
        inputField.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        inputField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                inputFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter your command here:");

        outField.setEditable(false);
        outField.setColumns(20);
        outField.setLineWrap(true);
        outField.setRows(5);
        outField.setWrapStyleWord(true);
        jScrollPane1.setViewportView(outField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        // TODO add your handling code here:
        String str = inputField.getText();
        inputField.setText("");
        inputField.setEnabled(false);
        box.put(str);
    }//GEN-LAST:event_inputFieldActionPerformed

    /**
     * @return the new gui
     */
    public static GUITextIO createGUI()
    {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            GUITextIO gui = new GUITextIO();
            gui.setVisible(true);
            guiBox.put(gui);
        });
        return guiBox.get();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void close()
    {
        try
        {
            java.awt.EventQueue.invokeAndWait(()
              -> 
              {
                  this.dispose();
            });
        }
        catch(InterruptedException | InvocationTargetException ex)
        {
            Logger.getLogger(GUITextIO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void put(String str)
    {
        try
        {
            java.awt.EventQueue.invokeAndWait(() ->
            {
                String newText = outField.getText() + str;
                outField.setText(newText);
            });
        } catch (InterruptedException | InvocationTargetException ex)
        {
        }
    }

    @Override
    public String get()
    {
        try
        {
            java.awt.EventQueue.invokeAndWait(() ->
            {
                inputField.setEnabled(true);
                inputField.requestFocus();
            });

        } catch (InterruptedException | InvocationTargetException ex)
        {
            Logger.getLogger(GUITextIO.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return box.get();
    }

    @Override
    public void clear()
    {
        try
        {
            java.awt.EventQueue.invokeAndWait(() ->
            {
                outField.setText("");
            });

        } catch (InterruptedException | InvocationTargetException ex)
        {
            Logger.getLogger(GUITextIO.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }
}
